def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    compileSdkVersion 28

    buildToolsVersion "28.0.3"

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "de.sistar.fcsprad"
        minSdkVersion 18
        targetSdkVersion 28
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

repositories {
    google()
    maven { url 'https://jitpack.io' }
}

flutter {
    source '../..'
}

apply plugin: 'com.amazonaws.appsync'

dependencies {

    implementation group: 'com.amazonaws', name: 'aws-android-sdk-appsync', version: '2.7.0'
    implementation group: 'com.amazonaws', name: 'aws-android-sdk-appsync-api', version: '2.7.0'
    implementation "com.google.code.gson:gson:2.8.5"
    implementation 'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.2.0'
    implementation 'org.eclipse.paho:org.eclipse.paho.android.service:1.1.1'
    implementation group: 'androidx.appcompat', name: 'appcompat', version: '1.1.0-alpha01'

    implementation  group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.2'

    // "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    // https://mvnrepository.com/artifact/org.jetbrains.kotlin/kotlin-stdlib-jdk8
    implementation group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib-jdk8', version: kotlin_version

    testImplementation 'junit:junit:4.12'
    // Robolectric environment
    androidTestImplementation "androidx.test.ext:junit:1.1.0"
    androidTestImplementation 'com.github.tmurakami:dexopener:2.0.0' //only allows to open / mock classes in own package
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test:rules:1.1.1'
    testImplementation 'androidx.test:core:1.1.0'
    testImplementation 'org.robolectric:robolectric:4.0.2'
    testImplementation 'org.mockito:mockito-core:2.19.1'
    androidTestImplementation 'org.mockito:mockito-android:2.19.1'

    androidTestImplementation "com.google.truth:truth:0.42"

    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
}
